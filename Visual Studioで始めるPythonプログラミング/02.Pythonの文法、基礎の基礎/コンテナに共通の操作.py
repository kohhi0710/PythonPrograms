
# -----------------------------------------------------------------------------------------------------
# コンテナオブジェクトの作成
# -----------------------------------------------------------------------------------------------------

# リスト、タプル、辞書、集合の作成

# リストの作成
l = list(range(10))
print(l) # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

# タプルの作成
t = tuple(zip(l,"abcdefghij"))
print(t) # ((0, 'a'), (1, 'b'), (2, 'c'), (3, 'd'), (4, 'e'), (5, 'f'), (6, 'g'), (7, 'h'), (8, 'i'), (9, 'j'))

# 辞書の作成
d = dict(t) # {0: 'a', 1: 'b', 2: 'c', 3: 'd', 4: 'e', 5: 'f', 6: 'g', 7: 'h', 8: 'i', 9: 'j'}
print(d)

# 集合の作成
s = set(l)
print(s) # {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}

# -----------------------------------------------------------------------------------------------------
# コンテナの反復処理
# -----------------------------------------------------------------------------------------------------

# リストを全呼び出し
for num in l:
    print(num) # ex)1

# タプルを全呼び出し
for num,c in t:
    print("{0}:{1}".format(num,c)) # ex)0:a

# 辞書を全呼び出し
for num,c in d.items():
    print("{0}:{1}".format(num,c)) # ex)0:a

# 集合を全呼び出し
for num in s:
    print(num) # ex)1

# -----------------------------------------------------------------------------------------------------
# 存在判定
# -----------------------------------------------------------------------------------------------------

# リストに9が含まれているか
print(9 in l) # True

# リストに11が含まれているか
print(11 in l) # False

# リストに100が含まれていないか
print(100 not in l) # True

# タプルに(0,"b")が含まれているか
print((0,"b") in t) # False

# 辞書の存在判定はキーを対象とする
print("a" in d) # False
print(0 in d) # True

# 集合に100が含まれているか
print(100 in s) # False

# 集合に100が含まれていないか
print(100 not in s) # True

# -----------------------------------------------------------------------------------------------------
# リストとタプルで共通の操作
# -----------------------------------------------------------------------------------------------------

# randomモジュールのインポート
import random

# リストの内包表記による乱数リストの作成
l1 = [random.randrange(20) for x in range(10)]
l2 = [random.randrange(20) for x in range(10)]
print(l1)
print(l2)

# リストの比較
print(l1 == l2) # False
print(l1 > l2)
print(l2 > l1)

# 最終要素だけl2とちがうリストl3を作成
l3 = l2.copy()
l3[len(l2) - 1] = 999999
print(l3)

# l3のほうがl2よりも大きい
print(l3 > l2) # True

# l1をもとにタプルt1を作成
t1 = tuple(l1)
print(t1)

# max:t1に含まれる要素の最大値
print(max(t1))

# min:t1に含まれる要素の最小値
print(min(t1))

# -----------------------------------------------------------------------------------------------------
# 文字列
# -----------------------------------------------------------------------------------------------------

s = "ムゲンダイマックス"

# 反復処理
for c in s:
    print(c)
    
# 文字列のスライス(インデックス-6から文字列末尾までをスライス)
print(s[-6:]) # ダイマックス

s = "WildFlower"

# upper:大文字に変換
s1 = s.upper()
print(s1) # WILDFLOWER

# lower:小文字に変換
s2 = s.lower()
print(s2) # wildflower

# 文字列を辞書式順序で比較
# 辞書式順序は小文字が優先
print(s1 < s2) # True