# ----------------------------------------------------------------------------------------
# クラス変数とクラスメソッドを持つクラス
# ----------------------------------------------------------------------------------------

# インスタンスが生成されるごとにクラス変数_countをカウントアップしていき、
# クラスメソッドcountを呼び出すとそのカウントを表示するクラス
class Bar:
    # クラス変数
    # クラスレベルの変数であり、複数のインスタンスで共有される
    # 「class クラス名:」の直下のブロックに記述する
    # 「_」を1つだけ前置するのは、「内部で使用する」ということを意味する(スタイルガイドに沿った記述)
    # C#でいう「private」にあたるもの
    _count = 0

    def __init__(self):
        Bar._count += 1

    # クラスメソッド
    # 引数にクラスオブジェクトをとる
    # クラスオブジェクトは、インスタンスが生成されるたびに__init__メソッドを呼び出し、
    # _count変数をカウントアップする
    #その後、printの処理をする
    @classmethod
    def count(cls):
        print(cls._count)

    # スタティックメソッド
    # 第一引数にクラスオブジェクトを受け取らないことがクラスオブジェクトとの違い
    @staticmethod
    def static_method():
        print("static method")

# クラスメソッドの使用
Bar.count() # 0
b = Bar() # インスタンスを生成してカウントアップ
b.count() # 1   
b = Bar() # インスタンスを生成してカウントアップ
b.count() # 2

# スタティックメソッドの使用
# クラスオブジェクトを引数にとらなくても使えるので、クラスをモジュール/名前空間とした
# 何らかのユーティリティ関数を実装したりするのに使える
Bar.static_method() # static method
b = Bar()
b.static_method() # static method


